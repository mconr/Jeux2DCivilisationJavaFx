/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package projet.approche.objet;

import org.junit.jupiter.api.Test;

import projet.approche.objet.domain.valueObject.resource.Resource;
import projet.approche.objet.domain.valueObject.resource.ResourceAmount;
import projet.approche.objet.domain.valueObject.resource.ResourceType;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
	@Test
	void testConstructor() {
		ResourceType type = ResourceType.fromString("Wood");
		ResourceAmount amount = new ResourceAmount(10);
		Resource resource = new Resource(type, amount);

		assertEquals(type, resource.type);
		assertEquals(amount, resource.amount);
	}

	@Test
	void testAdd() {
		ResourceType type = ResourceType.fromString("Wood");
		Resource resource1 = new Resource(type, 10);
		Resource resource2 = new Resource(type, 20);

		Resource result = resource1.add(resource2);

		assertEquals(type, result.type);
		assertEquals(30, result.amount.value);
	}

	@Test
	void testAddDifferentTypes() {
		Resource resource1 = new Resource(ResourceType.fromString("Wood"), 10);
		Resource resource2 = new Resource(ResourceType.fromString("Stone"), 20);

		assertThrows(IllegalArgumentException.class, () -> resource1.add(resource2));
	}

	@Test
	void testEquals() {
		ResourceType type = ResourceType.fromString("Wood");
		Resource resource1 = new Resource(type, 10);
		Resource resource2 = new Resource(type, 10);

		assertTrue(resource1.equals(resource2));
	}

	@Test
	void testToString() {
		ResourceType type = ResourceType.fromString("Wood");
		Resource resource = new Resource(type, 10);

		assertEquals("Wood : 10", resource.toString());
	}

	@Test
	void testToShortString() {
		ResourceType type = ResourceType.fromString("Wood");
		Resource resource = new Resource(type, 10);

		assertEquals("Wood : 10", resource.toShortString());
	}
}
